<문제>
* 문제 설명
1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요.

소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.
(1은 소수가 아닙니다.)

* 제한 조건
n은 2이상 1000000이하의 자연수입니다.

* 입출력 예
n	result
10	4
5	3

입출력 예 설명
입출력 예 #1
1부터 10 사이의 소수는 [2,3,5,7] 4개가 존재하므로 4를 반환

입출력 예 #2
1부터 5 사이의 소수는 [2,3,5] 3개가 존재하므로 3를 반환

<풀이>
function solution(n) {
    var answer = 0;
    var s;
    for (var i=2; i<=n ;i++){
        s=0;
        for(var j=2; j<=i; j++){
            if(i%j == 0) s++;
        }
        if(s == 1) answer++;
    }
    return answer;
}

+ 효율성을 높인 코드
function solution(n) {
  var arr=Array(n+1).fill(true).fill(false, 0, 2);
  
  for (var i=2; i<=n ;i++){
    if(arr[i]){
      for(var j=i*i; j<=n; j+=i){
      	arr[j] = false;
      }
    }
  }
  return arr.filter((ele)=>{return ele}).length;
}


function numberOfPrime(n) {
    var result = 0;
    // 함수를 완성하세요.
    var cnt=0;
    for(var a=2;a<=n;a++){
    cnt=0;
    for(var b=1;b<=a;b++){
            if(a%b==0)
          cnt++;
    }
    if(cnt==2)
      result++;
  }
    return result;
}